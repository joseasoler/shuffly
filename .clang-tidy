# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# Generated with clang-tidy 18.1.8.

# Use clang-format.
HeaderFileExtensions:
  - hpp
ImplementationFileExtensions:
  - cpp
FormatStyle: file

CheckOptions:
  - { key: readability-identifier-naming.ClassCase,              value: lower_case }
  - { key: readability-identifier-naming.EnumCase,               value: lower_case }
  - { key: readability-identifier-naming.EnumConstantCase,       value: lower_case }
  - { key: readability-identifier-naming.FunctionCase,           value: lower_case }
  - { key: readability-identifier-naming.NamespaceCase,          value: lower_case }
  - { key: readability-identifier-naming.ParameterCase,          value: lower_case }
  - { key: readability-identifier-naming.TypeAliasCase,          value: lower_case }
  - { key: readability-identifier-naming.UnionCase,              value: lower_case }
  - { key: readability-identifier-naming.VariableCase,           value: lower_case }
# Ignore public members in structs.
  - { key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic, value: true }

WarningsAsErrors: '*'

# All clang-checks are enabled by default, except for some project-specific diagnostics.
#
# Checks producing undesirable results or false positives are disabled explicitly documenting the reason below.
# bugprone-easily-swappable-parameters: I'd rather not implement strong types for width and height.
# clang-diagnostic-unknown-warning-option: Triggered by GCC-only warnings.
# clang-diagnostic-unused-command-line-argument: Ignore unused command line arguments.
# cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers: Magic numbers are useful in unit testing.
# cppcoreguidelines-pro-bounds-constant-array-index: Allow casting enum values to use them as array indexes.
# cppcoreguidelines-pro-bounds-pointer-arithmetic: Allow using pointer arithmetic.
# llvm-header-guard: Allow use of #pragma once
# modernize-use-trailing-return-type: Do not force use of trailing return types.

Checks: '
*,
-altera-*,
-android-*,
-fuchsia-*,
-google-*,
-llvmlibc-*,
-zircon-*,

-bugprone-easily-swappable-parameters,
-clang-diagnostic-unknown-warning-option,
-clang-diagnostic-unused-command-line-argument,
-cppcoreguidelines-avoid-magic-numbers,-readability-magic-numbers,
-cppcoreguidelines-pro-bounds-constant-array-index,
-cppcoreguidelines-pro-bounds-pointer-arithmetic,
-llvm-header-guard,
-modernize-use-trailing-return-type,
'
